{"version":3,"file":"firebase-vertexai.js","sources":["../util/src/errors.ts","../component/src/component.ts","../logger/src/logger.ts","../../node_modules/tslib/tslib.es6.mjs","../vertexai/src/constants.ts","../vertexai/src/service.ts","../vertexai/src/errors.ts","../vertexai/src/logger.ts","../vertexai/src/requests/request.ts","../vertexai/src/types/enums.ts","../vertexai/src/types/schema.ts","../vertexai/src/requests/response-helpers.ts","../vertexai/src/requests/stream-reader.ts","../vertexai/src/methods/generate-content.ts","../vertexai/src/requests/request-helpers.ts","../vertexai/src/methods/chat-session-helpers.ts","../vertexai/src/methods/chat-session.ts","../vertexai/src/models/generative-model.ts","../vertexai/src/methods/count-tokens.ts","../vertexai/src/requests/schema-builder.ts","../vertexai/src/api.ts","../util/src/compat.ts","../vertexai/src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // TypeScript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // TODO(dlarocque): Replace this with `new.target`: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n    //                   which we can now use since we no longer target ES5.\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../package.json';\n\nexport const VERTEX_TYPE = 'vertexAI';\n\nexport const DEFAULT_LOCATION = 'us-central1';\n\nexport const DEFAULT_BASE_URL = 'https://firebasevertexai.googleapis.com';\n\nexport const DEFAULT_API_VERSION = 'v1beta';\n\nexport const PACKAGE_VERSION = version;\n\nexport const LANGUAGE_TAG = 'gl-js';\n\nexport const DEFAULT_FETCH_TIMEOUT_MS = 180 * 1000;\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { VertexAI, VertexAIOptions } from './public-types';\nimport {\n  AppCheckInternalComponentName,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { DEFAULT_LOCATION } from './constants';\n\nexport class VertexAIService implements VertexAI, _FirebaseService {\n  auth: FirebaseAuthInternal | null;\n  appCheck: FirebaseAppCheckInternal | null;\n  location: string;\n\n  constructor(\n    public app: FirebaseApp,\n    authProvider?: Provider<FirebaseAuthInternalName>,\n    appCheckProvider?: Provider<AppCheckInternalComponentName>,\n    public options?: VertexAIOptions\n  ) {\n    const appCheck = appCheckProvider?.getImmediate({ optional: true });\n    const auth = authProvider?.getImmediate({ optional: true });\n    this.auth = auth || null;\n    this.appCheck = appCheck || null;\n    this.location = this.options?.location || DEFAULT_LOCATION;\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { VertexAIErrorCode, CustomErrorData } from './types';\nimport { VERTEX_TYPE } from './constants';\n\n/**\n * Error class for the Vertex AI in Firebase SDK.\n *\n * @public\n */\nexport class VertexAIError extends FirebaseError {\n  /**\n   * Constructs a new instance of the `VertexAIError` class.\n   *\n   * @param code - The error code from <code>{@link VertexAIErrorCode}</code>.\n   * @param message - A human-readable message describing the error.\n   * @param customErrorData - Optional error data.\n   */\n  constructor(\n    readonly code: VertexAIErrorCode,\n    message: string,\n    readonly customErrorData?: CustomErrorData\n  ) {\n    // Match error format used by FirebaseError from ErrorFactory\n    const service = VERTEX_TYPE;\n    const serviceName = 'VertexAI';\n    const fullCode = `${service}/${code}`;\n    const fullMessage = `${serviceName}: ${message} (${fullCode})`;\n    super(code, fullMessage);\n\n    // FirebaseError initializes a stack trace, but it assumes the error is created from the error\n    // factory. Since we break this assumption, we set the stack trace to be originating from this\n    // constructor.\n    // This is only supported in V8.\n    if (Error.captureStackTrace) {\n      // Allows us to initialize the stack trace without including the constructor itself at the\n      // top level of the stack trace.\n      Error.captureStackTrace(this, VertexAIError);\n    }\n\n    // Allows instanceof VertexAIError in ES5/ES6\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // TODO(dlarocque): Replace this with `new.target`: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n    //                   which we can now use since we no longer target ES5.\n    Object.setPrototypeOf(this, VertexAIError.prototype);\n\n    // Since Error is an interface, we don't inherit toString and so we define it ourselves.\n    this.toString = () => fullMessage;\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/vertexai');\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorDetails, RequestOptions, VertexAIErrorCode } from '../types';\nimport { VertexAIError } from '../errors';\nimport { ApiSettings } from '../types/internal';\nimport {\n  DEFAULT_API_VERSION,\n  DEFAULT_BASE_URL,\n  DEFAULT_FETCH_TIMEOUT_MS,\n  LANGUAGE_TAG,\n  PACKAGE_VERSION\n} from '../constants';\nimport { logger } from '../logger';\n\nexport enum Task {\n  GENERATE_CONTENT = 'generateContent',\n  STREAM_GENERATE_CONTENT = 'streamGenerateContent',\n  COUNT_TOKENS = 'countTokens'\n}\n\nexport class RequestUrl {\n  constructor(\n    public model: string,\n    public task: Task,\n    public apiSettings: ApiSettings,\n    public stream: boolean,\n    public requestOptions?: RequestOptions\n  ) {}\n  toString(): string {\n    // TODO: allow user-set option if that feature becomes available\n    const apiVersion = DEFAULT_API_VERSION;\n    const baseUrl = this.requestOptions?.baseUrl || DEFAULT_BASE_URL;\n    let url = `${baseUrl}/${apiVersion}`;\n    url += `/projects/${this.apiSettings.project}`;\n    url += `/locations/${this.apiSettings.location}`;\n    url += `/${this.model}`;\n    url += `:${this.task}`;\n    if (this.stream) {\n      url += '?alt=sse';\n    }\n    return url;\n  }\n\n  /**\n   * If the model needs to be passed to the backend, it needs to\n   * include project and location path.\n   */\n  get fullModelString(): string {\n    let modelString = `projects/${this.apiSettings.project}`;\n    modelString += `/locations/${this.apiSettings.location}`;\n    modelString += `/${this.model}`;\n    return modelString;\n  }\n}\n\n/**\n * Log language and \"fire/version\" to x-goog-api-client\n */\nfunction getClientHeaders(): string {\n  const loggingTags = [];\n  loggingTags.push(`${LANGUAGE_TAG}/${PACKAGE_VERSION}`);\n  loggingTags.push(`fire/${PACKAGE_VERSION}`);\n  return loggingTags.join(' ');\n}\n\nexport async function getHeaders(url: RequestUrl): Promise<Headers> {\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  headers.append('x-goog-api-client', getClientHeaders());\n  headers.append('x-goog-api-key', url.apiSettings.apiKey);\n  if (url.apiSettings.getAppCheckToken) {\n    const appCheckToken = await url.apiSettings.getAppCheckToken();\n    if (appCheckToken) {\n      headers.append('X-Firebase-AppCheck', appCheckToken.token);\n      if (appCheckToken.error) {\n        logger.warn(\n          `Unable to obtain a valid App Check token: ${appCheckToken.error.message}`\n        );\n      }\n    }\n  }\n\n  if (url.apiSettings.getAuthToken) {\n    const authToken = await url.apiSettings.getAuthToken();\n    if (authToken) {\n      headers.append('Authorization', `Firebase ${authToken.accessToken}`);\n    }\n  }\n\n  return headers;\n}\n\nexport async function constructRequest(\n  model: string,\n  task: Task,\n  apiSettings: ApiSettings,\n  stream: boolean,\n  body: string,\n  requestOptions?: RequestOptions\n): Promise<{ url: string; fetchOptions: RequestInit }> {\n  const url = new RequestUrl(model, task, apiSettings, stream, requestOptions);\n  return {\n    url: url.toString(),\n    fetchOptions: {\n      method: 'POST',\n      headers: await getHeaders(url),\n      body\n    }\n  };\n}\n\nexport async function makeRequest(\n  model: string,\n  task: Task,\n  apiSettings: ApiSettings,\n  stream: boolean,\n  body: string,\n  requestOptions?: RequestOptions\n): Promise<Response> {\n  const url = new RequestUrl(model, task, apiSettings, stream, requestOptions);\n  let response;\n  let fetchTimeoutId: string | number | NodeJS.Timeout | undefined;\n  try {\n    const request = await constructRequest(\n      model,\n      task,\n      apiSettings,\n      stream,\n      body,\n      requestOptions\n    );\n    // Timeout is 180s by default\n    const timeoutMillis =\n      requestOptions?.timeout != null && requestOptions.timeout >= 0\n        ? requestOptions.timeout\n        : DEFAULT_FETCH_TIMEOUT_MS;\n    const abortController = new AbortController();\n    fetchTimeoutId = setTimeout(() => abortController.abort(), timeoutMillis);\n    request.fetchOptions.signal = abortController.signal;\n\n    response = await fetch(request.url, request.fetchOptions);\n    if (!response.ok) {\n      let message = '';\n      let errorDetails;\n      try {\n        const json = await response.json();\n        message = json.error.message;\n        if (json.error.details) {\n          message += ` ${JSON.stringify(json.error.details)}`;\n          errorDetails = json.error.details;\n        }\n      } catch (e) {\n        // ignored\n      }\n      if (\n        response.status === 403 &&\n        errorDetails.some(\n          (detail: ErrorDetails) => detail.reason === 'SERVICE_DISABLED'\n        ) &&\n        errorDetails.some((detail: ErrorDetails) =>\n          (\n            detail.links as Array<Record<string, string>>\n          )?.[0]?.description.includes(\n            'Google developers console API activation'\n          )\n        )\n      ) {\n        throw new VertexAIError(\n          VertexAIErrorCode.API_NOT_ENABLED,\n          `The Vertex AI in Firebase SDK requires the Vertex AI in Firebase ` +\n            `API ('firebasevertexai.googleapis.com') to be enabled in your ` +\n            `Firebase project. Enable this API by visiting the Firebase Console ` +\n            `at https://console.firebase.google.com/project/${url.apiSettings.project}/genai/ ` +\n            `and clicking \"Get started\". If you enabled this API recently, ` +\n            `wait a few minutes for the action to propagate to our systems and ` +\n            `then retry.`,\n          {\n            status: response.status,\n            statusText: response.statusText,\n            errorDetails\n          }\n        );\n      }\n      throw new VertexAIError(\n        VertexAIErrorCode.FETCH_ERROR,\n        `Error fetching from ${url}: [${response.status} ${response.statusText}] ${message}`,\n        {\n          status: response.status,\n          statusText: response.statusText,\n          errorDetails\n        }\n      );\n    }\n  } catch (e) {\n    let err = e as Error;\n    if (\n      (e as VertexAIError).code !== VertexAIErrorCode.FETCH_ERROR &&\n      (e as VertexAIError).code !== VertexAIErrorCode.API_NOT_ENABLED &&\n      e instanceof Error\n    ) {\n      err = new VertexAIError(\n        VertexAIErrorCode.ERROR,\n        `Error fetching from ${url.toString()}: ${e.message}`\n      );\n      err.stack = e.stack;\n    }\n\n    throw err;\n  } finally {\n    if (fetchTimeoutId) {\n      clearTimeout(fetchTimeoutId);\n    }\n  }\n  return response;\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Role is the producer of the content.\n * @public\n */\nexport type Role = (typeof POSSIBLE_ROLES)[number];\n\n/**\n * Possible roles.\n * @public\n */\nexport const POSSIBLE_ROLES = ['user', 'model', 'function', 'system'] as const;\n\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nexport enum HarmCategory {\n  HARM_CATEGORY_HATE_SPEECH = 'HARM_CATEGORY_HATE_SPEECH',\n  HARM_CATEGORY_SEXUALLY_EXPLICIT = 'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n  HARM_CATEGORY_HARASSMENT = 'HARM_CATEGORY_HARASSMENT',\n  HARM_CATEGORY_DANGEROUS_CONTENT = 'HARM_CATEGORY_DANGEROUS_CONTENT'\n}\n\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nexport enum HarmBlockThreshold {\n  // Content with NEGLIGIBLE will be allowed.\n  BLOCK_LOW_AND_ABOVE = 'BLOCK_LOW_AND_ABOVE',\n  // Content with NEGLIGIBLE and LOW will be allowed.\n  BLOCK_MEDIUM_AND_ABOVE = 'BLOCK_MEDIUM_AND_ABOVE',\n  // Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed.\n  BLOCK_ONLY_HIGH = 'BLOCK_ONLY_HIGH',\n  // All content will be allowed.\n  BLOCK_NONE = 'BLOCK_NONE'\n}\n\n/**\n * @public\n */\nexport enum HarmBlockMethod {\n  // The harm block method uses both probability and severity scores.\n  SEVERITY = 'SEVERITY',\n  // The harm block method uses the probability score.\n  PROBABILITY = 'PROBABILITY'\n}\n\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nexport enum HarmProbability {\n  // Content has a negligible chance of being unsafe.\n  NEGLIGIBLE = 'NEGLIGIBLE',\n  // Content has a low chance of being unsafe.\n  LOW = 'LOW',\n  // Content has a medium chance of being unsafe.\n  MEDIUM = 'MEDIUM',\n  // Content has a high chance of being unsafe.\n  HIGH = 'HIGH'\n}\n\n/**\n * Harm severity levels.\n * @public\n */\nexport enum HarmSeverity {\n  // Negligible level of harm severity.\n  HARM_SEVERITY_NEGLIGIBLE = 'HARM_SEVERITY_NEGLIGIBLE',\n  // Low level of harm severity.\n  HARM_SEVERITY_LOW = 'HARM_SEVERITY_LOW',\n  // Medium level of harm severity.\n  HARM_SEVERITY_MEDIUM = 'HARM_SEVERITY_MEDIUM',\n  // High level of harm severity.\n  HARM_SEVERITY_HIGH = 'HARM_SEVERITY_HIGH'\n}\n\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nexport enum BlockReason {\n  // Content was blocked by safety settings.\n  SAFETY = 'SAFETY',\n  // Content was blocked, but the reason is uncategorized.\n  OTHER = 'OTHER'\n}\n\n/**\n * Reason that a candidate finished.\n * @public\n */\nexport enum FinishReason {\n  // Natural stop point of the model or provided stop sequence.\n  STOP = 'STOP',\n  // The maximum number of tokens as specified in the request was reached.\n  MAX_TOKENS = 'MAX_TOKENS',\n  // The candidate content was flagged for safety reasons.\n  SAFETY = 'SAFETY',\n  // The candidate content was flagged for recitation reasons.\n  RECITATION = 'RECITATION',\n  // Unknown reason.\n  OTHER = 'OTHER'\n}\n\n/**\n * @public\n */\nexport enum FunctionCallingMode {\n  // Default model behavior, model decides to predict either a function call\n  // or a natural language response.\n  AUTO = 'AUTO',\n  // Model is constrained to always predicting a function call only.\n  // If \"allowed_function_names\" is set, the predicted function call will be\n  // limited to any one of \"allowed_function_names\", else the predicted\n  // function call will be any one of the provided \"function_declarations\".\n  ANY = 'ANY',\n  // Model will not predict any function call. Model behavior is same as when\n  // not passing any function declarations.\n  NONE = 'NONE'\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Contains the list of OpenAPI data types\n * as defined by the\n * {@link https://swagger.io/docs/specification/data-models/data-types/ | OpenAPI specification}\n * @public\n */\nexport enum SchemaType {\n  /** String type. */\n  STRING = 'string',\n  /** Number type. */\n  NUMBER = 'number',\n  /** Integer type. */\n  INTEGER = 'integer',\n  /** Boolean type. */\n  BOOLEAN = 'boolean',\n  /** Array type. */\n  ARRAY = 'array',\n  /** Object type. */\n  OBJECT = 'object'\n}\n\n/**\n * Basic <code>{@link Schema}</code> properties shared across several Schema-related\n * types.\n * @public\n */\nexport interface SchemaShared<T> {\n  /** Optional. The format of the property. */\n  format?: string;\n  /** Optional. The description of the property. */\n  description?: string;\n  /** Optional. The items of the property. */\n  items?: T;\n  /** Optional. Map of `Schema` objects. */\n  properties?: {\n    [k: string]: T;\n  };\n  /** Optional. The enum of the property. */\n  enum?: string[];\n  /** Optional. The example of the property. */\n  example?: unknown;\n  /** Optional. Whether the property is nullable. */\n  nullable?: boolean;\n  [key: string]: unknown;\n}\n\n/**\n * Params passed to <code>{@link Schema}</code> static methods to create specific\n * <code>{@link Schema}</code> classes.\n * @public\n */\nexport interface SchemaParams extends SchemaShared<SchemaInterface> {}\n\n/**\n * Final format for <code>{@link Schema}</code> params passed to backend requests.\n * @public\n */\nexport interface SchemaRequest extends SchemaShared<SchemaRequest> {\n  /**\n   * The type of the property. {@link\n   * SchemaType}.\n   */\n  type: SchemaType;\n  /** Optional. Array of required property. */\n  required?: string[];\n}\n\n/**\n * Interface for <code>{@link Schema}</code> class.\n * @public\n */\nexport interface SchemaInterface extends SchemaShared<SchemaInterface> {\n  /**\n   * The type of the property. {@link\n   * SchemaType}.\n   */\n  type: SchemaType;\n}\n\n/**\n * Interface for <code>{@link ObjectSchema}</code> class.\n * @public\n */\nexport interface ObjectSchemaInterface extends SchemaInterface {\n  type: SchemaType.OBJECT;\n  optionalProperties?: string[];\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  EnhancedGenerateContentResponse,\n  FinishReason,\n  FunctionCall,\n  GenerateContentCandidate,\n  GenerateContentResponse,\n  VertexAIErrorCode\n} from '../types';\nimport { VertexAIError } from '../errors';\nimport { logger } from '../logger';\n\n/**\n * Creates an EnhancedGenerateContentResponse object that has helper functions and\n * other modifications that improve usability.\n */\nexport function createEnhancedContentResponse(\n  response: GenerateContentResponse\n): EnhancedGenerateContentResponse {\n  /**\n   * The Vertex AI backend omits default values.\n   * This causes the `index` property to be omitted from the first candidate in the\n   * response, since it has index 0, and 0 is a default value.\n   * See: https://github.com/firebase/firebase-js-sdk/issues/8566\n   */\n  if (response.candidates && !response.candidates[0].hasOwnProperty('index')) {\n    response.candidates[0].index = 0;\n  }\n\n  const responseWithHelpers = addHelpers(response);\n  return responseWithHelpers;\n}\n\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nexport function addHelpers(\n  response: GenerateContentResponse\n): EnhancedGenerateContentResponse {\n  (response as EnhancedGenerateContentResponse).text = () => {\n    if (response.candidates && response.candidates.length > 0) {\n      if (response.candidates.length > 1) {\n        logger.warn(\n          `This response had ${response.candidates.length} ` +\n            `candidates. Returning text from the first candidate only. ` +\n            `Access response.candidates directly to use the other candidates.`\n        );\n      }\n      if (hadBadFinishReason(response.candidates[0])) {\n        throw new VertexAIError(\n          VertexAIErrorCode.RESPONSE_ERROR,\n          `Response error: ${formatBlockErrorMessage(\n            response\n          )}. Response body stored in error.response`,\n          {\n            response\n          }\n        );\n      }\n      return getText(response);\n    } else if (response.promptFeedback) {\n      throw new VertexAIError(\n        VertexAIErrorCode.RESPONSE_ERROR,\n        `Text not available. ${formatBlockErrorMessage(response)}`,\n        {\n          response\n        }\n      );\n    }\n    return '';\n  };\n  (response as EnhancedGenerateContentResponse).functionCalls = () => {\n    if (response.candidates && response.candidates.length > 0) {\n      if (response.candidates.length > 1) {\n        logger.warn(\n          `This response had ${response.candidates.length} ` +\n            `candidates. Returning function calls from the first candidate only. ` +\n            `Access response.candidates directly to use the other candidates.`\n        );\n      }\n      if (hadBadFinishReason(response.candidates[0])) {\n        throw new VertexAIError(\n          VertexAIErrorCode.RESPONSE_ERROR,\n          `Response error: ${formatBlockErrorMessage(\n            response\n          )}. Response body stored in error.response`,\n          {\n            response\n          }\n        );\n      }\n      return getFunctionCalls(response);\n    } else if (response.promptFeedback) {\n      throw new VertexAIError(\n        VertexAIErrorCode.RESPONSE_ERROR,\n        `Function call not available. ${formatBlockErrorMessage(response)}`,\n        {\n          response\n        }\n      );\n    }\n    return undefined;\n  };\n  return response as EnhancedGenerateContentResponse;\n}\n\n/**\n * Returns all text found in all parts of first candidate.\n */\nexport function getText(response: GenerateContentResponse): string {\n  const textStrings = [];\n  if (response.candidates?.[0].content?.parts) {\n    for (const part of response.candidates?.[0].content?.parts) {\n      if (part.text) {\n        textStrings.push(part.text);\n      }\n    }\n  }\n  if (textStrings.length > 0) {\n    return textStrings.join('');\n  } else {\n    return '';\n  }\n}\n\n/**\n * Returns <code>{@link FunctionCall}</code>s associated with first candidate.\n */\nexport function getFunctionCalls(\n  response: GenerateContentResponse\n): FunctionCall[] | undefined {\n  const functionCalls: FunctionCall[] = [];\n  if (response.candidates?.[0].content?.parts) {\n    for (const part of response.candidates?.[0].content?.parts) {\n      if (part.functionCall) {\n        functionCalls.push(part.functionCall);\n      }\n    }\n  }\n  if (functionCalls.length > 0) {\n    return functionCalls;\n  } else {\n    return undefined;\n  }\n}\n\nconst badFinishReasons = [FinishReason.RECITATION, FinishReason.SAFETY];\n\nfunction hadBadFinishReason(candidate: GenerateContentCandidate): boolean {\n  return (\n    !!candidate.finishReason &&\n    badFinishReasons.includes(candidate.finishReason)\n  );\n}\n\nexport function formatBlockErrorMessage(\n  response: GenerateContentResponse\n): string {\n  let message = '';\n  if (\n    (!response.candidates || response.candidates.length === 0) &&\n    response.promptFeedback\n  ) {\n    message += 'Response was blocked';\n    if (response.promptFeedback?.blockReason) {\n      message += ` due to ${response.promptFeedback.blockReason}`;\n    }\n    if (response.promptFeedback?.blockReasonMessage) {\n      message += `: ${response.promptFeedback.blockReasonMessage}`;\n    }\n  } else if (response.candidates?.[0]) {\n    const firstCandidate = response.candidates[0];\n    if (hadBadFinishReason(firstCandidate)) {\n      message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n      if (firstCandidate.finishMessage) {\n        message += `: ${firstCandidate.finishMessage}`;\n      }\n    }\n  }\n  return message;\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  EnhancedGenerateContentResponse,\n  GenerateContentCandidate,\n  GenerateContentResponse,\n  GenerateContentStreamResult,\n  Part,\n  VertexAIErrorCode\n} from '../types';\nimport { VertexAIError } from '../errors';\nimport { createEnhancedContentResponse } from './response-helpers';\n\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nexport function processStream(response: Response): GenerateContentStreamResult {\n  const inputStream = response.body!.pipeThrough(\n    new TextDecoderStream('utf8', { fatal: true })\n  );\n  const responseStream =\n    getResponseStream<GenerateContentResponse>(inputStream);\n  const [stream1, stream2] = responseStream.tee();\n  return {\n    stream: generateResponseSequence(stream1),\n    response: getResponsePromise(stream2)\n  };\n}\n\nasync function getResponsePromise(\n  stream: ReadableStream<GenerateContentResponse>\n): Promise<EnhancedGenerateContentResponse> {\n  const allResponses: GenerateContentResponse[] = [];\n  const reader = stream.getReader();\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) {\n      const enhancedResponse = createEnhancedContentResponse(\n        aggregateResponses(allResponses)\n      );\n      return enhancedResponse;\n    }\n    allResponses.push(value);\n  }\n}\n\nasync function* generateResponseSequence(\n  stream: ReadableStream<GenerateContentResponse>\n): AsyncGenerator<EnhancedGenerateContentResponse> {\n  const reader = stream.getReader();\n  while (true) {\n    const { value, done } = await reader.read();\n    if (done) {\n      break;\n    }\n\n    const enhancedResponse = createEnhancedContentResponse(value);\n    yield enhancedResponse;\n  }\n}\n\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nexport function getResponseStream<T>(\n  inputStream: ReadableStream<string>\n): ReadableStream<T> {\n  const reader = inputStream.getReader();\n  const stream = new ReadableStream<T>({\n    start(controller) {\n      let currentText = '';\n      return pump();\n      function pump(): Promise<(() => Promise<void>) | undefined> {\n        return reader.read().then(({ value, done }) => {\n          if (done) {\n            if (currentText.trim()) {\n              controller.error(\n                new VertexAIError(\n                  VertexAIErrorCode.PARSE_FAILED,\n                  'Failed to parse stream'\n                )\n              );\n              return;\n            }\n            controller.close();\n            return;\n          }\n\n          currentText += value;\n          let match = currentText.match(responseLineRE);\n          let parsedResponse: T;\n          while (match) {\n            try {\n              parsedResponse = JSON.parse(match[1]);\n            } catch (e) {\n              controller.error(\n                new VertexAIError(\n                  VertexAIErrorCode.PARSE_FAILED,\n                  `Error parsing JSON response: \"${match[1]}`\n                )\n              );\n              return;\n            }\n            controller.enqueue(parsedResponse);\n            currentText = currentText.substring(match[0].length);\n            match = currentText.match(responseLineRE);\n          }\n          return pump();\n        });\n      }\n    }\n  });\n  return stream;\n}\n\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nexport function aggregateResponses(\n  responses: GenerateContentResponse[]\n): GenerateContentResponse {\n  const lastResponse = responses[responses.length - 1];\n  const aggregatedResponse: GenerateContentResponse = {\n    promptFeedback: lastResponse?.promptFeedback\n  };\n  for (const response of responses) {\n    if (response.candidates) {\n      for (const candidate of response.candidates) {\n        // Index will be undefined if it's the first index (0), so we should use 0 if it's undefined.\n        // See: https://github.com/firebase/firebase-js-sdk/issues/8566\n        const i = candidate.index || 0;\n        if (!aggregatedResponse.candidates) {\n          aggregatedResponse.candidates = [];\n        }\n        if (!aggregatedResponse.candidates[i]) {\n          aggregatedResponse.candidates[i] = {\n            index: candidate.index\n          } as GenerateContentCandidate;\n        }\n        // Keep overwriting, the last one will be final\n        aggregatedResponse.candidates[i].citationMetadata =\n          candidate.citationMetadata;\n        aggregatedResponse.candidates[i].finishReason = candidate.finishReason;\n        aggregatedResponse.candidates[i].finishMessage =\n          candidate.finishMessage;\n        aggregatedResponse.candidates[i].safetyRatings =\n          candidate.safetyRatings;\n\n        /**\n         * Candidates should always have content and parts, but this handles\n         * possible malformed responses.\n         */\n        if (candidate.content && candidate.content.parts) {\n          if (!aggregatedResponse.candidates[i].content) {\n            aggregatedResponse.candidates[i].content = {\n              role: candidate.content.role || 'user',\n              parts: []\n            };\n          }\n          const newPart: Partial<Part> = {};\n          for (const part of candidate.content.parts) {\n            if (part.text) {\n              newPart.text = part.text;\n            }\n            if (part.functionCall) {\n              newPart.functionCall = part.functionCall;\n            }\n            if (Object.keys(newPart).length === 0) {\n              newPart.text = '';\n            }\n            aggregatedResponse.candidates[i].content.parts.push(\n              newPart as Part\n            );\n          }\n        }\n      }\n    }\n  }\n  return aggregatedResponse;\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GenerateContentRequest,\n  GenerateContentResponse,\n  GenerateContentResult,\n  GenerateContentStreamResult,\n  RequestOptions\n} from '../types';\nimport { Task, makeRequest } from '../requests/request';\nimport { createEnhancedContentResponse } from '../requests/response-helpers';\nimport { processStream } from '../requests/stream-reader';\nimport { ApiSettings } from '../types/internal';\n\nexport async function generateContentStream(\n  apiSettings: ApiSettings,\n  model: string,\n  params: GenerateContentRequest,\n  requestOptions?: RequestOptions\n): Promise<GenerateContentStreamResult> {\n  const response = await makeRequest(\n    model,\n    Task.STREAM_GENERATE_CONTENT,\n    apiSettings,\n    /* stream */ true,\n    JSON.stringify(params),\n    requestOptions\n  );\n  return processStream(response);\n}\n\nexport async function generateContent(\n  apiSettings: ApiSettings,\n  model: string,\n  params: GenerateContentRequest,\n  requestOptions?: RequestOptions\n): Promise<GenerateContentResult> {\n  const response = await makeRequest(\n    model,\n    Task.GENERATE_CONTENT,\n    apiSettings,\n    /* stream */ false,\n    JSON.stringify(params),\n    requestOptions\n  );\n  const responseJson: GenerateContentResponse = await response.json();\n  const enhancedResponse = createEnhancedContentResponse(responseJson);\n  return {\n    response: enhancedResponse\n  };\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Content,\n  GenerateContentRequest,\n  Part,\n  VertexAIErrorCode\n} from '../types';\nimport { VertexAIError } from '../errors';\n\nexport function formatSystemInstruction(\n  input?: string | Part | Content\n): Content | undefined {\n  // null or undefined\n  if (input == null) {\n    return undefined;\n  } else if (typeof input === 'string') {\n    return { role: 'system', parts: [{ text: input }] } as Content;\n  } else if ((input as Part).text) {\n    return { role: 'system', parts: [input as Part] };\n  } else if ((input as Content).parts) {\n    if (!(input as Content).role) {\n      return { role: 'system', parts: (input as Content).parts };\n    } else {\n      return input as Content;\n    }\n  }\n}\n\nexport function formatNewContent(\n  request: string | Array<string | Part>\n): Content {\n  let newParts: Part[] = [];\n  if (typeof request === 'string') {\n    newParts = [{ text: request }];\n  } else {\n    for (const partOrString of request) {\n      if (typeof partOrString === 'string') {\n        newParts.push({ text: partOrString });\n      } else {\n        newParts.push(partOrString);\n      }\n    }\n  }\n  return assignRoleToPartsAndValidateSendMessageRequest(newParts);\n}\n\n/**\n * When multiple Part types (i.e. FunctionResponsePart and TextPart) are\n * passed in a single Part array, we may need to assign different roles to each\n * part. Currently only FunctionResponsePart requires a role other than 'user'.\n * @private\n * @param parts Array of parts to pass to the model\n * @returns Array of content items\n */\nfunction assignRoleToPartsAndValidateSendMessageRequest(\n  parts: Part[]\n): Content {\n  const userContent: Content = { role: 'user', parts: [] };\n  const functionContent: Content = { role: 'function', parts: [] };\n  let hasUserContent = false;\n  let hasFunctionContent = false;\n  for (const part of parts) {\n    if ('functionResponse' in part) {\n      functionContent.parts.push(part);\n      hasFunctionContent = true;\n    } else {\n      userContent.parts.push(part);\n      hasUserContent = true;\n    }\n  }\n\n  if (hasUserContent && hasFunctionContent) {\n    throw new VertexAIError(\n      VertexAIErrorCode.INVALID_CONTENT,\n      'Within a single message, FunctionResponse cannot be mixed with other type of Part in the request for sending chat message.'\n    );\n  }\n\n  if (!hasUserContent && !hasFunctionContent) {\n    throw new VertexAIError(\n      VertexAIErrorCode.INVALID_CONTENT,\n      'No Content is provided for sending chat message.'\n    );\n  }\n\n  if (hasUserContent) {\n    return userContent;\n  }\n\n  return functionContent;\n}\n\nexport function formatGenerateContentInput(\n  params: GenerateContentRequest | string | Array<string | Part>\n): GenerateContentRequest {\n  let formattedRequest: GenerateContentRequest;\n  if ((params as GenerateContentRequest).contents) {\n    formattedRequest = params as GenerateContentRequest;\n  } else {\n    // Array or string\n    const content = formatNewContent(params as string | Array<string | Part>);\n    formattedRequest = { contents: [content] };\n  }\n  if ((params as GenerateContentRequest).systemInstruction) {\n    formattedRequest.systemInstruction = formatSystemInstruction(\n      (params as GenerateContentRequest).systemInstruction\n    );\n  }\n  return formattedRequest;\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Content,\n  POSSIBLE_ROLES,\n  Part,\n  Role,\n  VertexAIErrorCode\n} from '../types';\nimport { VertexAIError } from '../errors';\n\n// https://ai.google.dev/api/rest/v1beta/Content#part\n\nconst VALID_PART_FIELDS: Array<keyof Part> = [\n  'text',\n  'inlineData',\n  'functionCall',\n  'functionResponse'\n];\n\nconst VALID_PARTS_PER_ROLE: { [key in Role]: Array<keyof Part> } = {\n  user: ['text', 'inlineData'],\n  function: ['functionResponse'],\n  model: ['text', 'functionCall'],\n  // System instructions shouldn't be in history anyway.\n  system: ['text']\n};\n\nconst VALID_PREVIOUS_CONTENT_ROLES: { [key in Role]: Role[] } = {\n  user: ['model'],\n  function: ['model'],\n  model: ['user', 'function'],\n  // System instructions shouldn't be in history.\n  system: []\n};\n\nexport function validateChatHistory(history: Content[]): void {\n  let prevContent: Content | null = null;\n  for (const currContent of history) {\n    const { role, parts } = currContent;\n    if (!prevContent && role !== 'user') {\n      throw new VertexAIError(\n        VertexAIErrorCode.INVALID_CONTENT,\n        `First Content should be with role 'user', got ${role}`\n      );\n    }\n    if (!POSSIBLE_ROLES.includes(role)) {\n      throw new VertexAIError(\n        VertexAIErrorCode.INVALID_CONTENT,\n        `Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(\n          POSSIBLE_ROLES\n        )}`\n      );\n    }\n\n    if (!Array.isArray(parts)) {\n      throw new VertexAIError(\n        VertexAIErrorCode.INVALID_CONTENT,\n        `Content should have 'parts' but property with an array of Parts`\n      );\n    }\n\n    if (parts.length === 0) {\n      throw new VertexAIError(\n        VertexAIErrorCode.INVALID_CONTENT,\n        `Each Content should have at least one part`\n      );\n    }\n\n    const countFields: Record<keyof Part, number> = {\n      text: 0,\n      inlineData: 0,\n      functionCall: 0,\n      functionResponse: 0\n    };\n\n    for (const part of parts) {\n      for (const key of VALID_PART_FIELDS) {\n        if (key in part) {\n          countFields[key] += 1;\n        }\n      }\n    }\n    const validParts = VALID_PARTS_PER_ROLE[role];\n    for (const key of VALID_PART_FIELDS) {\n      if (!validParts.includes(key) && countFields[key] > 0) {\n        throw new VertexAIError(\n          VertexAIErrorCode.INVALID_CONTENT,\n          `Content with role '${role}' can't contain '${key}' part`\n        );\n      }\n    }\n\n    if (prevContent) {\n      const validPreviousContentRoles = VALID_PREVIOUS_CONTENT_ROLES[role];\n      if (!validPreviousContentRoles.includes(prevContent.role)) {\n        throw new VertexAIError(\n          VertexAIErrorCode.INVALID_CONTENT,\n          `Content with role '${role} can't follow '${\n            prevContent.role\n          }'. Valid previous roles: ${JSON.stringify(\n            VALID_PREVIOUS_CONTENT_ROLES\n          )}`\n        );\n      }\n    }\n    prevContent = currContent;\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Content,\n  GenerateContentRequest,\n  GenerateContentResult,\n  GenerateContentStreamResult,\n  Part,\n  RequestOptions,\n  StartChatParams\n} from '../types';\nimport { formatNewContent } from '../requests/request-helpers';\nimport { formatBlockErrorMessage } from '../requests/response-helpers';\nimport { validateChatHistory } from './chat-session-helpers';\nimport { generateContent, generateContentStream } from './generate-content';\nimport { ApiSettings } from '../types/internal';\nimport { logger } from '../logger';\n\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = 'SILENT_ERROR';\n\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nexport class ChatSession {\n  private _apiSettings: ApiSettings;\n  private _history: Content[] = [];\n  private _sendPromise: Promise<void> = Promise.resolve();\n\n  constructor(\n    apiSettings: ApiSettings,\n    public model: string,\n    public params?: StartChatParams,\n    public requestOptions?: RequestOptions\n  ) {\n    this._apiSettings = apiSettings;\n    if (params?.history) {\n      validateChatHistory(params.history);\n      this._history = params.history;\n    }\n  }\n\n  /**\n   * Gets the chat history so far. Blocked prompts are not added to history.\n   * Neither blocked candidates nor the prompts that generated them are added\n   * to history.\n   */\n  async getHistory(): Promise<Content[]> {\n    await this._sendPromise;\n    return this._history;\n  }\n\n  /**\n   * Sends a chat message and receives a non-streaming\n   * <code>{@link GenerateContentResult}</code>\n   */\n  async sendMessage(\n    request: string | Array<string | Part>\n  ): Promise<GenerateContentResult> {\n    await this._sendPromise;\n    const newContent = formatNewContent(request);\n    const generateContentRequest: GenerateContentRequest = {\n      safetySettings: this.params?.safetySettings,\n      generationConfig: this.params?.generationConfig,\n      tools: this.params?.tools,\n      toolConfig: this.params?.toolConfig,\n      systemInstruction: this.params?.systemInstruction,\n      contents: [...this._history, newContent]\n    };\n    let finalResult = {} as GenerateContentResult;\n    // Add onto the chain.\n    this._sendPromise = this._sendPromise\n      .then(() =>\n        generateContent(\n          this._apiSettings,\n          this.model,\n          generateContentRequest,\n          this.requestOptions\n        )\n      )\n      .then(result => {\n        if (\n          result.response.candidates &&\n          result.response.candidates.length > 0\n        ) {\n          this._history.push(newContent);\n          const responseContent: Content = {\n            parts: result.response.candidates?.[0].content.parts || [],\n            // Response seems to come back without a role set.\n            role: result.response.candidates?.[0].content.role || 'model'\n          };\n          this._history.push(responseContent);\n        } else {\n          const blockErrorMessage = formatBlockErrorMessage(result.response);\n          if (blockErrorMessage) {\n            logger.warn(\n              `sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`\n            );\n          }\n        }\n        finalResult = result;\n      });\n    await this._sendPromise;\n    return finalResult;\n  }\n\n  /**\n   * Sends a chat message and receives the response as a\n   * <code>{@link GenerateContentStreamResult}</code> containing an iterable stream\n   * and a response promise.\n   */\n  async sendMessageStream(\n    request: string | Array<string | Part>\n  ): Promise<GenerateContentStreamResult> {\n    await this._sendPromise;\n    const newContent = formatNewContent(request);\n    const generateContentRequest: GenerateContentRequest = {\n      safetySettings: this.params?.safetySettings,\n      generationConfig: this.params?.generationConfig,\n      tools: this.params?.tools,\n      toolConfig: this.params?.toolConfig,\n      systemInstruction: this.params?.systemInstruction,\n      contents: [...this._history, newContent]\n    };\n    const streamPromise = generateContentStream(\n      this._apiSettings,\n      this.model,\n      generateContentRequest,\n      this.requestOptions\n    );\n\n    // Add onto the chain.\n    this._sendPromise = this._sendPromise\n      .then(() => streamPromise)\n      // This must be handled to avoid unhandled rejection, but jump\n      // to the final catch block with a label to not log this error.\n      .catch(_ignored => {\n        throw new Error(SILENT_ERROR);\n      })\n      .then(streamResult => streamResult.response)\n      .then(response => {\n        if (response.candidates && response.candidates.length > 0) {\n          this._history.push(newContent);\n          const responseContent = { ...response.candidates[0].content };\n          // Response seems to come back without a role set.\n          if (!responseContent.role) {\n            responseContent.role = 'model';\n          }\n          this._history.push(responseContent);\n        } else {\n          const blockErrorMessage = formatBlockErrorMessage(response);\n          if (blockErrorMessage) {\n            logger.warn(\n              `sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`\n            );\n          }\n        }\n      })\n      .catch(e => {\n        // Errors in streamPromise are already catchable by the user as\n        // streamPromise is returned.\n        // Avoid duplicating the error message in logs.\n        if (e.message !== SILENT_ERROR) {\n          // Users do not have access to _sendPromise to catch errors\n          // downstream from streamPromise, so they should not throw.\n          logger.error(e);\n        }\n      });\n    return streamPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  generateContent,\n  generateContentStream\n} from '../methods/generate-content';\nimport {\n  Content,\n  CountTokensRequest,\n  CountTokensResponse,\n  GenerateContentRequest,\n  GenerateContentResult,\n  GenerateContentStreamResult,\n  GenerationConfig,\n  ModelParams,\n  Part,\n  RequestOptions,\n  SafetySetting,\n  StartChatParams,\n  Tool,\n  ToolConfig,\n  VertexAIErrorCode\n} from '../types';\nimport { VertexAIError } from '../errors';\nimport { ChatSession } from '../methods/chat-session';\nimport { countTokens } from '../methods/count-tokens';\nimport {\n  formatGenerateContentInput,\n  formatSystemInstruction\n} from '../requests/request-helpers';\nimport { VertexAI } from '../public-types';\nimport { ApiSettings } from '../types/internal';\nimport { VertexAIService } from '../service';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/**\n * Class for generative model APIs.\n * @public\n */\nexport class GenerativeModel {\n  private _apiSettings: ApiSettings;\n  model: string;\n  generationConfig: GenerationConfig;\n  safetySettings: SafetySetting[];\n  requestOptions?: RequestOptions;\n  tools?: Tool[];\n  toolConfig?: ToolConfig;\n  systemInstruction?: Content;\n\n  constructor(\n    vertexAI: VertexAI,\n    modelParams: ModelParams,\n    requestOptions?: RequestOptions\n  ) {\n    if (!vertexAI.app?.options?.apiKey) {\n      throw new VertexAIError(\n        VertexAIErrorCode.NO_API_KEY,\n        `The \"apiKey\" field is empty in the local Firebase config. Firebase VertexAI requires this field to contain a valid API key.`\n      );\n    } else if (!vertexAI.app?.options?.projectId) {\n      throw new VertexAIError(\n        VertexAIErrorCode.NO_PROJECT_ID,\n        `The \"projectId\" field is empty in the local Firebase config. Firebase VertexAI requires this field to contain a valid project ID.`\n      );\n    } else {\n      this._apiSettings = {\n        apiKey: vertexAI.app.options.apiKey,\n        project: vertexAI.app.options.projectId,\n        location: vertexAI.location\n      };\n\n      if (\n        _isFirebaseServerApp(vertexAI.app) &&\n        vertexAI.app.settings.appCheckToken\n      ) {\n        const token = vertexAI.app.settings.appCheckToken;\n        this._apiSettings.getAppCheckToken = () => {\n          return Promise.resolve({ token });\n        };\n      } else if ((vertexAI as VertexAIService).appCheck) {\n        this._apiSettings.getAppCheckToken = () =>\n          (vertexAI as VertexAIService).appCheck!.getToken();\n      }\n\n      if ((vertexAI as VertexAIService).auth) {\n        this._apiSettings.getAuthToken = () =>\n          (vertexAI as VertexAIService).auth!.getToken();\n      }\n    }\n    if (modelParams.model.includes('/')) {\n      if (modelParams.model.startsWith('models/')) {\n        // Add \"publishers/google\" if the user is only passing in 'models/model-name'.\n        this.model = `publishers/google/${modelParams.model}`;\n      } else {\n        // Any other custom format (e.g. tuned models) must be passed in correctly.\n        this.model = modelParams.model;\n      }\n    } else {\n      // If path is not included, assume it's a non-tuned model.\n      this.model = `publishers/google/models/${modelParams.model}`;\n    }\n    this.generationConfig = modelParams.generationConfig || {};\n    this.safetySettings = modelParams.safetySettings || [];\n    this.tools = modelParams.tools;\n    this.toolConfig = modelParams.toolConfig;\n    this.systemInstruction = formatSystemInstruction(\n      modelParams.systemInstruction\n    );\n    this.requestOptions = requestOptions || {};\n  }\n\n  /**\n   * Makes a single non-streaming call to the model\n   * and returns an object containing a single <code>{@link GenerateContentResponse}</code>.\n   */\n  async generateContent(\n    request: GenerateContentRequest | string | Array<string | Part>\n  ): Promise<GenerateContentResult> {\n    const formattedParams = formatGenerateContentInput(request);\n    return generateContent(\n      this._apiSettings,\n      this.model,\n      {\n        generationConfig: this.generationConfig,\n        safetySettings: this.safetySettings,\n        tools: this.tools,\n        toolConfig: this.toolConfig,\n        systemInstruction: this.systemInstruction,\n        ...formattedParams\n      },\n      this.requestOptions\n    );\n  }\n\n  /**\n   * Makes a single streaming call to the model\n   * and returns an object containing an iterable stream that iterates\n   * over all chunks in the streaming response as well as\n   * a promise that returns the final aggregated response.\n   */\n  async generateContentStream(\n    request: GenerateContentRequest | string | Array<string | Part>\n  ): Promise<GenerateContentStreamResult> {\n    const formattedParams = formatGenerateContentInput(request);\n    return generateContentStream(\n      this._apiSettings,\n      this.model,\n      {\n        generationConfig: this.generationConfig,\n        safetySettings: this.safetySettings,\n        tools: this.tools,\n        toolConfig: this.toolConfig,\n        systemInstruction: this.systemInstruction,\n        ...formattedParams\n      },\n      this.requestOptions\n    );\n  }\n\n  /**\n   * Gets a new <code>{@link ChatSession}</code> instance which can be used for\n   * multi-turn chats.\n   */\n  startChat(startChatParams?: StartChatParams): ChatSession {\n    return new ChatSession(\n      this._apiSettings,\n      this.model,\n      {\n        tools: this.tools,\n        toolConfig: this.toolConfig,\n        systemInstruction: this.systemInstruction,\n        ...startChatParams\n      },\n      this.requestOptions\n    );\n  }\n\n  /**\n   * Counts the tokens in the provided request.\n   */\n  async countTokens(\n    request: CountTokensRequest | string | Array<string | Part>\n  ): Promise<CountTokensResponse> {\n    const formattedParams = formatGenerateContentInput(request);\n    return countTokens(this._apiSettings, this.model, formattedParams);\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CountTokensRequest,\n  CountTokensResponse,\n  RequestOptions\n} from '../types';\nimport { Task, makeRequest } from '../requests/request';\nimport { ApiSettings } from '../types/internal';\n\nexport async function countTokens(\n  apiSettings: ApiSettings,\n  model: string,\n  params: CountTokensRequest,\n  requestOptions?: RequestOptions\n): Promise<CountTokensResponse> {\n  const response = await makeRequest(\n    model,\n    Task.COUNT_TOKENS,\n    apiSettings,\n    false,\n    JSON.stringify(params),\n    requestOptions\n  );\n  return response.json();\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VertexAIError } from '../errors';\nimport { VertexAIErrorCode } from '../types';\nimport {\n  SchemaInterface,\n  SchemaType,\n  SchemaParams,\n  SchemaRequest,\n  ObjectSchemaInterface\n} from '../types/schema';\n\n/**\n * Parent class encompassing all Schema types, with static methods that\n * allow building specific Schema types. This class can be converted with\n * `JSON.stringify()` into a JSON string accepted by Vertex AI REST endpoints.\n * (This string conversion is automatically done when calling SDK methods.)\n * @public\n */\nexport abstract class Schema implements SchemaInterface {\n  /**\n   * Optional. The type of the property. {@link\n   * SchemaType}.\n   */\n  type: SchemaType;\n  /** Optional. The format of the property.\n   * Supported formats:<br/>\n   * <ul>\n   *  <li>for NUMBER type: \"float\", \"double\"</li>\n   *  <li>for INTEGER type: \"int32\", \"int64\"</li>\n   *  <li>for STRING type: \"email\", \"byte\", etc</li>\n   * </ul>\n   */\n  format?: string;\n  /** Optional. The description of the property. */\n  description?: string;\n  /** Optional. Whether the property is nullable. Defaults to false. */\n  nullable: boolean;\n  /** Optional. The example of the property. */\n  example?: unknown;\n  /**\n   * Allows user to add other schema properties that have not yet\n   * been officially added to the SDK.\n   */\n  [key: string]: unknown;\n\n  constructor(schemaParams: SchemaInterface) {\n    // eslint-disable-next-line guard-for-in\n    for (const paramKey in schemaParams) {\n      this[paramKey] = schemaParams[paramKey];\n    }\n    // Ensure these are explicitly set to avoid TS errors.\n    this.type = schemaParams.type;\n    this.nullable = schemaParams.hasOwnProperty('nullable')\n      ? !!schemaParams.nullable\n      : false;\n  }\n\n  /**\n   * Defines how this Schema should be serialized as JSON.\n   * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\n   * @internal\n   */\n  toJSON(): SchemaRequest {\n    const obj: { type: SchemaType; [key: string]: unknown } = {\n      type: this.type\n    };\n    for (const prop in this) {\n      if (this.hasOwnProperty(prop) && this[prop] !== undefined) {\n        if (prop !== 'required' || this.type === SchemaType.OBJECT) {\n          obj[prop] = this[prop];\n        }\n      }\n    }\n    return obj as SchemaRequest;\n  }\n\n  static array(arrayParams: SchemaParams & { items: Schema }): ArraySchema {\n    return new ArraySchema(arrayParams, arrayParams.items);\n  }\n\n  static object(\n    objectParams: SchemaParams & {\n      properties: {\n        [k: string]: Schema;\n      };\n      optionalProperties?: string[];\n    }\n  ): ObjectSchema {\n    return new ObjectSchema(\n      objectParams,\n      objectParams.properties,\n      objectParams.optionalProperties\n    );\n  }\n\n  // eslint-disable-next-line id-blacklist\n  static string(stringParams?: SchemaParams): StringSchema {\n    return new StringSchema(stringParams);\n  }\n\n  static enumString(\n    stringParams: SchemaParams & { enum: string[] }\n  ): StringSchema {\n    return new StringSchema(stringParams, stringParams.enum);\n  }\n\n  static integer(integerParams?: SchemaParams): IntegerSchema {\n    return new IntegerSchema(integerParams);\n  }\n\n  // eslint-disable-next-line id-blacklist\n  static number(numberParams?: SchemaParams): NumberSchema {\n    return new NumberSchema(numberParams);\n  }\n\n  // eslint-disable-next-line id-blacklist\n  static boolean(booleanParams?: SchemaParams): BooleanSchema {\n    return new BooleanSchema(booleanParams);\n  }\n}\n\n/**\n * A type that includes all specific Schema types.\n * @public\n */\nexport type TypedSchema =\n  | IntegerSchema\n  | NumberSchema\n  | StringSchema\n  | BooleanSchema\n  | ObjectSchema\n  | ArraySchema;\n\n/**\n * Schema class for \"integer\" types.\n * @public\n */\nexport class IntegerSchema extends Schema {\n  constructor(schemaParams?: SchemaParams) {\n    super({\n      type: SchemaType.INTEGER,\n      ...schemaParams\n    });\n  }\n}\n\n/**\n * Schema class for \"number\" types.\n * @public\n */\nexport class NumberSchema extends Schema {\n  constructor(schemaParams?: SchemaParams) {\n    super({\n      type: SchemaType.NUMBER,\n      ...schemaParams\n    });\n  }\n}\n\n/**\n * Schema class for \"boolean\" types.\n * @public\n */\nexport class BooleanSchema extends Schema {\n  constructor(schemaParams?: SchemaParams) {\n    super({\n      type: SchemaType.BOOLEAN,\n      ...schemaParams\n    });\n  }\n}\n\n/**\n * Schema class for \"string\" types. Can be used with or without\n * enum values.\n * @public\n */\nexport class StringSchema extends Schema {\n  enum?: string[];\n  constructor(schemaParams?: SchemaParams, enumValues?: string[]) {\n    super({\n      type: SchemaType.STRING,\n      ...schemaParams\n    });\n    this.enum = enumValues;\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): SchemaRequest {\n    const obj = super.toJSON();\n    if (this.enum) {\n      obj['enum'] = this.enum;\n    }\n    return obj as SchemaRequest;\n  }\n}\n\n/**\n * Schema class for \"array\" types.\n * The `items` param should refer to the type of item that can be a member\n * of the array.\n * @public\n */\nexport class ArraySchema extends Schema {\n  constructor(schemaParams: SchemaParams, public items: TypedSchema) {\n    super({\n      type: SchemaType.ARRAY,\n      ...schemaParams\n    });\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): SchemaRequest {\n    const obj = super.toJSON();\n    obj.items = this.items.toJSON();\n    return obj;\n  }\n}\n\n/**\n * Schema class for \"object\" types.\n * The `properties` param must be a map of `Schema` objects.\n * @public\n */\nexport class ObjectSchema extends Schema {\n  constructor(\n    schemaParams: SchemaParams,\n    public properties: {\n      [k: string]: TypedSchema;\n    },\n    public optionalProperties: string[] = []\n  ) {\n    super({\n      type: SchemaType.OBJECT,\n      ...schemaParams\n    });\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): SchemaRequest {\n    const obj = super.toJSON();\n    obj.properties = { ...this.properties };\n    const required = [];\n    if (this.optionalProperties) {\n      for (const propertyKey of this.optionalProperties) {\n        if (!this.properties.hasOwnProperty(propertyKey)) {\n          throw new VertexAIError(\n            VertexAIErrorCode.INVALID_SCHEMA,\n            `Property \"${propertyKey}\" specified in \"optionalProperties\" does not exist.`\n          );\n        }\n      }\n    }\n    for (const propertyKey in this.properties) {\n      if (this.properties.hasOwnProperty(propertyKey)) {\n        obj.properties[propertyKey] = this.properties[\n          propertyKey\n        ].toJSON() as SchemaRequest;\n        if (!this.optionalProperties.includes(propertyKey)) {\n          required.push(propertyKey);\n        }\n      }\n    }\n    if (required.length > 0) {\n      obj.required = required;\n    }\n    delete (obj as ObjectSchemaInterface).optionalProperties;\n    return obj as SchemaRequest;\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\nimport { Provider } from '@firebase/component';\nimport { getModularInstance } from '@firebase/util';\nimport { DEFAULT_LOCATION, VERTEX_TYPE } from './constants';\nimport { VertexAIService } from './service';\nimport { VertexAI, VertexAIOptions } from './public-types';\nimport { ModelParams, RequestOptions, VertexAIErrorCode } from './types';\nimport { VertexAIError } from './errors';\nimport { GenerativeModel } from './models/generative-model';\n\nexport { ChatSession } from './methods/chat-session';\nexport * from './requests/schema-builder';\n\nexport { GenerativeModel };\n\nexport { VertexAIError };\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    [VERTEX_TYPE]: VertexAIService;\n  }\n}\n\n/**\n * Returns a <code>{@link VertexAI}</code> instance for the given app.\n *\n * @public\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n */\nexport function getVertexAI(\n  app: FirebaseApp = getApp(),\n  options?: VertexAIOptions\n): VertexAI {\n  app = getModularInstance(app);\n  // Dependencies\n  const vertexProvider: Provider<'vertexAI'> = _getProvider(app, VERTEX_TYPE);\n\n  return vertexProvider.getImmediate({\n    identifier: options?.location || DEFAULT_LOCATION\n  });\n}\n\n/**\n * Returns a <code>{@link GenerativeModel}</code> class with methods for inference\n * and other functionality.\n *\n * @public\n */\nexport function getGenerativeModel(\n  vertexAI: VertexAI,\n  modelParams: ModelParams,\n  requestOptions?: RequestOptions\n): GenerativeModel {\n  if (!modelParams.model) {\n    throw new VertexAIError(\n      VertexAIErrorCode.NO_MODEL,\n      `Must provide a model name. Example: getGenerativeModel({ model: 'my-model-name' })`\n    );\n  }\n  return new GenerativeModel(vertexAI, modelParams, requestOptions);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * The Vertex AI in Firebase Web SDK.\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion, _registerComponent } from '@firebase/app';\nimport { VertexAIService } from './service';\nimport { VERTEX_TYPE } from './constants';\nimport { Component, ComponentType } from '@firebase/component';\nimport { name, version } from '../package.json';\n\ndeclare global {\n  interface Window {\n    [key: string]: unknown;\n  }\n}\n\nfunction registerVertex(): void {\n  _registerComponent(\n    new Component(\n      VERTEX_TYPE,\n      (container, { instanceIdentifier: location }) => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const auth = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return new VertexAIService(app, auth, appCheckProvider, { location });\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterVertex();\n\nexport * from './api';\nexport * from './public-types';\n"],"names":["FirebaseError","Error","constructor","code","message","customData","super","this","name","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","replaceTemplate","replace","PATTERN","_","key","value","String","fullMessage","Component","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","callback","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","info","INFO","warn","WARN","error","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","logLevel","now","Date","toISOString","method","console","__await","v","__asyncGenerator","thisArg","_arguments","generator","Symbol","asyncIterator","TypeError","i","g","apply","q","AsyncIterator","verb","awaitReturn","f","Promise","resolve","then","reject","n","a","b","push","resume","step","r","fulfill","settle","e","shift","length","SuppressedError","VERTEX_TYPE","DEFAULT_LOCATION","PACKAGE_VERSION","version","VertexAIService","app","authProvider","appCheckProvider","options","appCheck","getImmediate","optional","auth","location","_a","_delete","VertexAIError","customErrorData","toString","logger","Logger","_logLevel","_logHandler","_userLogHandler","val","setLogLevel","logHandler","userLogHandler","log","Task","RequestUrl","model","task","apiSettings","stream","requestOptions","url","baseUrl","project","fullModelString","modelString","async","getHeaders","headers","Headers","append","getClientHeaders","loggingTags","join","apiKey","getAppCheckToken","appCheckToken","token","getAuthToken","authToken","accessToken","makeRequest","body","response","fetchTimeoutId","request","constructRequest","fetchOptions","timeoutMillis","timeout","abortController","AbortController","setTimeout","abort","signal","fetch","ok","errorDetails","json","details","JSON","stringify","status","some","detail","reason","_b","links","description","includes","statusText","err","stack","clearTimeout","POSSIBLE_ROLES","HarmCategory","HarmBlockThreshold","HarmBlockMethod","HarmProbability","HarmSeverity","BlockReason","FinishReason","FunctionCallingMode","SchemaType","createEnhancedContentResponse","candidates","hasOwnProperty","index","responseWithHelpers","addHelpers","text","hadBadFinishReason","formatBlockErrorMessage","getText","textStrings","content","parts","part","_d","_c","promptFeedback","functionCalls","getFunctionCalls","functionCall","badFinishReasons","RECITATION","SAFETY","candidate","finishReason","firstCandidate","finishMessage","blockReason","blockReasonMessage","responseLineRE","processStream","responseStream","getResponseStream","inputStream","reader","getReader","ReadableStream","start","controller","currentText","pump","read","done","trim","close","parsedResponse","match","parse","enqueue","substring","pipeThrough","TextDecoderStream","fatal","stream1","stream2","tee","generateResponseSequence","getResponsePromise","allResponses","aggregateResponses","enhancedResponse","responses","lastResponse","aggregatedResponse","citationMetadata","safetyRatings","role","newPart","keys","generateContentStream","params","STREAM_GENERATE_CONTENT","generateContent","GENERATE_CONTENT","formatSystemInstruction","input","formatNewContent","newParts","partOrString","assignRoleToPartsAndValidateSendMessageRequest","userContent","functionContent","hasUserContent","hasFunctionContent","formatGenerateContentInput","formattedRequest","contents","systemInstruction","VALID_PART_FIELDS","VALID_PARTS_PER_ROLE","user","function","system","VALID_PREVIOUS_CONTENT_ROLES","SILENT_ERROR","ChatSession","_history","_sendPromise","_apiSettings","history","validateChatHistory","prevContent","currContent","Array","isArray","countFields","inlineData","functionResponse","validParts","getHistory","sendMessage","newContent","generateContentRequest","safetySettings","generationConfig","tools","toolConfig","_e","finalResult","result","responseContent","blockErrorMessage","sendMessageStream","streamPromise","catch","_ignored","streamResult","assign","GenerativeModel","vertexAI","modelParams","projectId","_isFirebaseServerApp","settings","getToken","startsWith","formattedParams","startChat","startChatParams","countTokens","COUNT_TOKENS","Schema","schemaParams","paramKey","nullable","toJSON","obj","prop","undefined","OBJECT","array","arrayParams","ArraySchema","items","object","objectParams","ObjectSchema","properties","optionalProperties","string","stringParams","StringSchema","enumString","enum","integer","integerParams","IntegerSchema","number","numberParams","NumberSchema","boolean","booleanParams","BooleanSchema","INTEGER","NUMBER","BOOLEAN","enumValues","STRING","ARRAY","required","propertyKey","getVertexAI","getApp","getModularInstance","_delegate","_getProvider","identifier","getGenerativeModel","registerVertex","_registerComponent","container","instanceIdentifier","getProvider","registerVersion"],"mappings":"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","preExistingComment":"firebase-vertexai.js.map"}